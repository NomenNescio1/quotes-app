{"version":3,"sources":["index.js","Quotes.js"],"names":["ReactDOM","render","useState","content","autor","image","quote","setQuote","newQuote","setNewQuote","useEffect","a","async","fetch","response","json","data","character","fetchData","className","style","background","length","onClick","document","getElementById"],"mappings":"2QAKAA,IAASC,OAAO,mBCFM,WAAO,IAAD,EAEAC,mBAAS,CACjCC,QAAS,GACTC,MAAO,GACPC,MAAO,KALiB,mBAEnBC,EAFmB,KAEZC,EAFY,OAOML,oBAAS,GAPf,mBAOnBM,EAPmB,KAOTC,EAPS,KAuB1B,OAdAC,qBAAU,YACR,qBAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACyBE,MAAM,iDAD/B,cACQC,EADR,kBAAAH,EAAA,MAEqBG,EAASC,QAF9B,OAEQC,EAFR,OAGET,EAAS,CACPJ,QAASa,EAAK,GAAGV,MACjBF,MAAOY,EAAK,GAAGC,UACfZ,MAAOW,EAAK,GAAGX,QANnB,qCAUAa,KACC,CAACV,IAGF,yBAAKW,UAAU,OACb,+DACA,8CACA,yBAAKA,UAAU,YAAYC,MAAO,CAAEC,WAAW,OAAD,OAASf,EAAMD,MAAf,2BAC5C,yBAAKc,UAAU,UACZb,EAAMH,QAAQmB,OAAS,GACtB,6BACE,oCACE,2BAAIhB,EAAMH,SACV,0CAAWG,EAAMF,QAEnB,0BAAMe,UAAU,YAAYI,QAAS,kBAAMd,GAAaD,KAAxD,uBDjCE,MAAYgB,SAASC,eAAe,W","file":"static/js/main.19ee9222.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Quotes } from './Quotes';\n\nReactDOM.render(<Quotes />, document.getElementById('root'));\n\n\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\n\nexport const Quotes = () => {\n\n  const [quote, setQuote] = useState({\n    content: '',\n    autor: '',\n    image: ''\n  });\n  const [newQuote, setNewQuote] = useState(false);\n\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetch('https://thesimpsonsquoteapi.glitch.me/quotes');\n      const data = await response.json();\n      setQuote({\n        content: data[0].quote,\n        autor: data[0].character,\n        image: data[0].image\n      })\n    }\n\n    fetchData();\n  }, [newQuote])\n\n  return (\n    <div className=\"app\">\n      <h2>The Simpsons Quote Generator v2</h2>\n      <h4>(Mostly Homer)</h4>\n      <div className=\"container\" style={{ background: `url(${quote.image}) no-repeat right top` }}>\n        <div className=\"quotes\">\n          {quote.content.length > 0 && (\n            <div>\n              <blockquote>\n                <p>{quote.content}</p>\n                <footer>â€” {quote.autor}</footer>\n              </blockquote>\n              <span className='new-quote' onClick={() => setNewQuote(!newQuote)}>Get new quote</span>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\n"],"sourceRoot":""}